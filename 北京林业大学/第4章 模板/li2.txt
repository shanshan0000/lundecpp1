#include <iostream>
#include <string>
using namespace std;

template<typename T, int N>
class container{
private:
	T array[N];
public:
	void init(){
		for(int i=0;i<N;i++)
			cin>>array[i];
	} 
	
	void display(){
		for(int i=0;i<N;i++)
			cout<<array[i]<<" ";
		cout<<endl;
	}
};

int main(){
	container<int,5> c;
	c.init();
	c.display();
	
	container<string,5> s;
	s.init();
	s.display();	
		
	return 0;
}


++++++++++++++++++++

#include <iostream>
#include <string>
using namespace std;

template<typename T, int N>
class container{
private:
	T array[N];
public:
	void init();
	void display();
};

template<typename T, int N>
void container<T,N>::init(){
	for(int i=0;i<N;i++)
		cin>>array[i];
} 

template<typename T, int N>	
void container<T,N>::display(){
	for(int i=0;i<N;i++)
		cout<<array[i]<<" ";
	cout<<endl;
}

int main(){
	container<int,5> c;
	c.init();
	c.display();
	
	container<string,5> s;
	s.init();
	s.display();	
		
	return 0;
}