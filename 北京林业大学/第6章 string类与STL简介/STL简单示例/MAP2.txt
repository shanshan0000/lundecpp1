string serthitem("gaoteng");
mulitimap<string,string> athors;
athors.insert(make_pair("gaoteng","C++ Primer"));
athors.insert(make_pair("gaoteng","OpenGL"));
//查找第一关键字
multimap<string,string>::size_type count = athors.count(serthitem);
multimap<string,string>::iterator iter = athors.find(serthitem);
for(multimap<string,string>::size_type cnt = 0;cnt != count;++cnt,++iter)
	cout<<iter->second<<endl;
/*********************************/
//给出一系列要忽略的单词，这些单词以外的单词都看作关键字。给出一些标题，按这些关键字的字典序给标题排序
#include <iostream>
#include <cstdio>
#include <map>
#include <set>
#include <cctype>
#include <algorithm>
using namespace std;
const int maxn = 220;

int main() {
	string k, st;
	int a = 0;
	set<string> o;
	multimap<string, string> r;
	while (cin >> k && k != "::")
		o.insert(k);
	getchar();
	while (getline (cin, st)) {
		for (int i = 0; i < st.size(); i++)
			st[i] = tolower(st[i]);
		for (int i = 0; i < st.size(); i++) {
			if (!isalpha(st[i])) continue;
			string t;
			int rec = i;
			while (i < st.size() && isalpha(st[i]))
				t += st[i++];
			if (!o.count(t)) {
				for (int j = 0; j < t.size(); j++)
					t[j] = toupper(t[j]);
				string temp = st;
				temp.replace(rec, t.size(), t);
				r.insert(make_pair(t, temp));
			}
		}
	}
	for (multimap<string, string>::iterator i = r.begin(); i != r.end(); i++)
		cout << i -> second << endl;
	return 0;
}
/*********************************/
#include<iostream>
#include<stdio.h>
#include<map>
#include<string>
using namespace std;

int main()
{
    int T;
    cin>>T;
    if(T<1||T>100)
        return 0;
    string result[100];
    int N,M;
    map<string,string> mapstring;
    for(int k=0;k<T;++k){
        cin>>N>>M;
        if(N<2||N>10||M<0||M>10)
            return 0;
        string s1,s2,str[1000];
        mapstring.clear();
        for(int i=0;i<M;++i){
            cin>>s1>>s2;
            if(s1.size()>20||s2.size()>20)
                return 0;
            mapstring.insert(pair <string,string>( s1, s2 ));
        }
        int itr=0;
         string ss;
        getchar();
        getline(cin,ss);
        string::iterator p=ss.begin();
        while(p!=ss.end()){
            if(*p==' ')
                ++itr;
            else
                str[itr].push_back(*p);
            ++p;
        }
        itr=0;
        map<string, string>::iterator iter;
        while(str[itr]!=""){
            for(int i=0;i<N-1;++i){
                iter=mapstring.find(str[itr]);
                if(iter!=mapstring.end())
                    str[itr]=iter->second;
                else
                    break;
            }
            itr++;
        }
        if(str[itr]=="")
            if(itr>100)
                return 0;
        else
            if(itr>99)
                return 0;
        itr=0;
        while(str[itr]!=""){
            string tmp=str[itr]+" ";
            result[k]+=tmp;
            itr++;
        }
        result[k]=result[k].substr(0,result[k].length()-1);
    }
    for(int i=0;i<T;++i)
        cout<<"Case #"<<i+1<<": "<<result[i]<<endl;
    return 0;
}